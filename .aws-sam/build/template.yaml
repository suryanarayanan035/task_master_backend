AWSTemplateFormatVersion: '2010-09-09'
Description: task_master_users
Transform:
- AWS::Serverless-2016-10-31
Resources:
  getProjectsByUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-projects-by-user.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for getting projects of a user.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminGetUser
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /users/projects
            Method: GET
            Auth:
              Authorizer: NONE
              OverrideApiAuth: true
      CodeUri: getProjectsByUserFunction
    Metadata:
      SamResourceId: getProjectsByUserFunction
  synchronizeModelsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/synchronize-models.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for synchronizing all models.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /synchronize
            Method: POST
      CodeUri: synchronizeModelsFunction
    Metadata:
      SamResourceId: synchronizeModelsFunction
  createProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-project.createProjectHandler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for creating a new user.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /projects
            Method: POST
      CodeUri: createProjectFunction
    Metadata:
      SamResourceId: createProjectFunction
  getUsersByProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-users-by-project.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for getting users on a project.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminConfirmSignUp
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /projects/{projectId}/users
            Method: GET
      CodeUri: getUsersByProjectFunction
    Metadata:
      SamResourceId: getUsersByProjectFunction
  addUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/add-user.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for creating a new user.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminConfirmSignUp
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /users
            Method: POST
      CodeUri: addUserFunction
    Metadata:
      SamResourceId: addUserFunction
  createTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-task.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for creating a new task.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminConfirmSignUp
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /tasks
            Method: POST
      CodeUri: createTaskFunction
    Metadata:
      SamResourceId: createTaskFunction
  getTasksByProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-tasks-by-project.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for fetchings tasks of a project.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminConfirmSignUp
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /projects/{projectId}/tasks
            Method: GET
      CodeUri: getTasksByProjectFunction
    Metadata:
      SamResourceId: getTasksByProjectFunction
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
  getTaskByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-task-by-id.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for fetching the task by id.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminConfirmSignUp
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /tasks/{taskId}
            Method: GET
      CodeUri: getTaskByIdFunction
    Metadata:
      SamResourceId: getTaskByIdFunction
  updateTaskByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/update-task-by-id.handler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: This function is responsible for fetching the task by id.
      VpcConfig:
        SecurityGroupIds:
        - sg-0c1d8666195839860
        SubnetIds:
        - subnet-043adc92adc4b8e0a
      Policies:
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Sid: CognitoCreateUserPolicy
          Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminConfirmSignUp
          - rds-data:ExecuteSql
          - rds-data:ExecuteStatement
          - rds-data:CommitTransaction
          - rds-data:BeginTransaction
          - rds-data:BatchExecuteStatement
          - rds-data:RollbackTransaction
          - rds-db:connect
          Resource:
          - arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
          - '*'
      Environment:
        Variables:
          USER_POOL_ID: ap-south-1_iyQfb0wNX
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaskMasterApi
            Path: /tasks/{taskId}
            Method: PUT
      CodeUri: updateTaskByIdFunction
    Metadata:
      SamResourceId: updateTaskByIdFunction
  TaskMasterDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: task_master
      Engine: postgres
      EngineVersion: 16.3
      DBInstanceClass: db.t4g.micro
      MasterUsername: task_master
      MasterUserPassword: task_master
      AllocatedStorage: 20
      MultiAZ: false
  TaskMasterApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:ap-south-1:767397682317:userpool/ap-south-1_iyQfb0wNX
            Identity:
              Header: Authorization
              AuthType: COGNITO_USER_POOLS
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${TaskMasterApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
